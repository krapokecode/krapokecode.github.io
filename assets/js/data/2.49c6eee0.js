(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{40:function(e){e.exports={data:{blogPost:{title:"Pipe function ใน Javascript",date:"9 February, 2019",content:'<p>สำหรับใครที่เคยใช้เจ้าแพะหรือ ramdaJS มาก่อนคงได้ยินหรือเคยใช้ pipe() มาอยู่แล้ว ซึ่งพี่ pipe() เอาไว้ทำอะไรน่ะเหรอ ดูตัวอย่างเลยครับ</p>\n<pre><code>getFirstChar( toLowerCase(data))\n</code></pre>\n<p>ทุกเห็นคงคิดว่าก็ไม่เห็นมีไรเลยซับซ้อนตรงไหนแค่ 2 functions เอง แต่ถ้าสมมุติเป็นแบบนี้ล่ะ</p>\n<pre><code>getFirstChar( toLowerCase(convertAsciiToText(getName(data))))\n</code></pre>\n<p><img src="https://firebasestorage.googleapis.com/v0/b/myblog-7f48d.appspot.com/o/flamelink%2Fmedia%2F1545679658057_1545660065385_holy-shit-what-dc0kau.jpg?alt=media&#x26;token=494d24a5-5bba-42fc-a2c0-6fa7b851a73f"></p>\n<p>เฮ๊<del></del>~~ ทุกคนกำลังคิดแบบนี้อยู่แน่ๆ</p>\n<p>ก่อนที่เราจะมาพูดถึงวิธีการแก้ไขปัญหา เรามาพูดถึงแนวคิดของเจ้า pipe กันก่อน ต้องย้อนกลับไปความรู้ทางคณิตศาสตร์ตอน ม. 5 การเลยคือเรื่อง relation and function ต้องขอบอกก่อนว่าผมก็ไม่เก่งคณิตศาสตร์แต่ผมจะพยายามอธิบายให้ง่ายที่สุดเท่าที่จะทำได้นะครับ</p>\n<p><strong>Math #1 basic function</strong></p>\n<br/>\nสมมุติว่าผมสร้าง function ตัวนึงสำหรับรับค่า x เพื่อนำไปบวก 2\n<pre><code>f(x) = x + 2\n</code></pre>\n<br/>\nทีนี้ผมสร้างอีก function นึงสำหรับรับค่า x แล้วทำไปคูณ 5\n<pre><code>g(x) = x * 5\n</code></pre>\n<br/>\nเริ่มจาก function แรกก่อน\n<pre><code>f(2) = 2 + 2\n     = 4\n</code></pre>\n<br/>\nต่อมาตัวก็เป็น function g\n<pre><code>g(2) = 2 * 5\n     = 10\n</code></pre>\n<br/>\nนี้ก็เป็นตัวอย่างเล็กๆน้อยจากเรื่อง function สำหรับ ม. 5 ต่อไปมาเริ่มในสิ่งที่ยากขึ้นอีกระดับนึงเรียกว่า composite function เริ่ม!!\n<p><strong>Math #2 Composite function</strong>\n<br/>\nง่ายๆมันคือการรวม function เข้าด้วยกันนั้นเอง ผมขอยก 2 functions ด้านบนมาด้วยนะครับจะได้ไม่เสียเวลา มันก็จะได้แบบนี้</p>\n<br/>\nอันดับแรกผมเอา 2 function2 นี้รวมกัน\n<pre><code>f(g(x))\n</code></pre>\n<br/>\nผมจะเขียนแนวการคิดไปทีละขั้นตอนเน้อ...\n<pre><code>f(g(x)) = f(x * 5)\n        = (x * 5) + 2\n</code></pre>\n<br/>\nลองมาดูตัวอย่างกัน\n<pre><code>f(g(2)) = f(2 * 5)\n        = (2 * 5) + 2\n        = 10 + 2\n        = 12\n</code></pre>\n<br/>\nเอ๊ะแล้วเจ้า pipe() สุดที่รักของเรามันเกี่ยวอะไรกับคณิตศาสตร์ชวนปวดหัว ผมต้องบอกเลยว่ามันคืออันเดียวกัน ผมจะเปรียบเทียบให้ดู\n<pre><code>f(g(x)) = getFirstChar( toLowerCase(data))\n</code></pre>\n<br/>\nเห็นมั๊ยว่าเหมือนกันเป๊ะๆ เรามาดูโค๊ด pipe() กันเลย\n<pre><code>const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x)\n</code></pre>\n<br/>\n<p>สำหรับใครที่ไม่รู้จัก Rest Parameter &#x26; Reduce Parameter ตามนี้โล๊ดวิธีการใช้ตัว pipe() ก็ตามนี้เลย</p>\n<br/>\n<pre><code>pipe(getFirstChar, toLowerCase, convertAsciiToText, getName)(data)\n</code></pre>\n<br/>\n<p>เห็นมั๊ยว่าสะดวกและอ่านงานกว่าเยอะ ถือว่าเป็นวิธีที่ดีมากๆเป็นไงบ้างครับ สำหรับอะไรแบบนี้</p>\n<br/>\nRef:\n<p><a href="https://medium.com/front-end-weekly/pipe-and-compose-in-javascript-5b04004ac937" target="_blank" rel="nofollow noopener noreferrer">pipe</a></p>\n<p><a href="https://medium.freecodecamp.org/how-do-javascript-rest-parameters-actually-work-227726e16cc8" target="_blank" rel="nofollow noopener noreferrer">rest parameter</a></p>\n<p><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce" target="_blank" rel="nofollow noopener noreferrer">reduce</a></p>\n',image:{type:"image",mimeType:"image/jpeg",src:"https://i.imgur.com/fp0HTAi.jpg"},author:"Tar Jarupong"}}}}}]);